{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n\n/**\n * Does a simple sanitization of all elements\n * in an untrusted string\n */\nconst sanitizeDOMString = untrustedString => {\n  try {\n    if (untrustedString instanceof IonicSafeString) {\n      return untrustedString.value;\n    }\n\n    if (!isSanitizerEnabled() || typeof untrustedString !== 'string' || untrustedString === '') {\n      return untrustedString;\n    }\n    /**\n     * Create a document fragment\n     * separate from the main DOM,\n     * create a div to do our work in\n     */\n\n\n    const documentFragment = document.createDocumentFragment();\n    const workingDiv = document.createElement('div');\n    documentFragment.appendChild(workingDiv);\n    workingDiv.innerHTML = untrustedString;\n    /**\n     * Remove any elements\n     * that are blocked\n     */\n\n    blockedTags.forEach(blockedTag => {\n      const getElementsToRemove = documentFragment.querySelectorAll(blockedTag);\n\n      for (let elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\n        const element = getElementsToRemove[elementIndex];\n\n        if (element.parentNode) {\n          element.parentNode.removeChild(element);\n        } else {\n          documentFragment.removeChild(element);\n        }\n        /**\n         * We still need to sanitize\n         * the children of this element\n         * as they are left behind\n         */\n\n\n        const childElements = getElementChildren(element);\n        /* eslint-disable-next-line */\n\n        for (let childIndex = 0; childIndex < childElements.length; childIndex++) {\n          sanitizeElement(childElements[childIndex]);\n        }\n      }\n    });\n    /**\n     * Go through remaining elements and remove\n     * non-allowed attribs\n     */\n    // IE does not support .children on document fragments, only .childNodes\n\n    const dfChildren = getElementChildren(documentFragment);\n    /* eslint-disable-next-line */\n\n    for (let childIndex = 0; childIndex < dfChildren.length; childIndex++) {\n      sanitizeElement(dfChildren[childIndex]);\n    } // Append document fragment to div\n\n\n    const fragmentDiv = document.createElement('div');\n    fragmentDiv.appendChild(documentFragment); // First child is always the div we did our work in\n\n    const getInnerDiv = fragmentDiv.querySelector('div');\n    return getInnerDiv !== null ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\n  } catch (err) {\n    console.error(err);\n    return '';\n  }\n};\n/**\n * Clean up current element based on allowed attributes\n * and then recursively dig down into any child elements to\n * clean those up as well\n */\n\n\nconst sanitizeElement = element => {\n  // IE uses childNodes, so ignore nodes that are not elements\n  if (element.nodeType && element.nodeType !== 1) {\n    return;\n  }\n\n  for (let i = element.attributes.length - 1; i >= 0; i--) {\n    const attribute = element.attributes.item(i);\n    const attributeName = attribute.name; // remove non-allowed attribs\n\n    if (!allowedAttributes.includes(attributeName.toLowerCase())) {\n      element.removeAttribute(attributeName);\n      continue;\n    } // clean up any allowed attribs\n    // that attempt to do any JS funny-business\n\n\n    const attributeValue = attribute.value;\n    /* eslint-disable-next-line */\n\n    if (attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) {\n      element.removeAttribute(attributeName);\n    }\n  }\n  /**\n   * Sanitize any nested children\n   */\n\n\n  const childElements = getElementChildren(element);\n  /* eslint-disable-next-line */\n\n  for (let i = 0; i < childElements.length; i++) {\n    sanitizeElement(childElements[i]);\n  }\n};\n/**\n * IE doesn't always support .children\n * so we revert to .childNodes instead\n */\n\n\nconst getElementChildren = el => {\n  return el.children != null ? el.children : el.childNodes;\n};\n\nconst isSanitizerEnabled = () => {\n  var _a;\n\n  const win = window;\n  const config = (_a = win === null || win === void 0 ? void 0 : win.Ionic) === null || _a === void 0 ? void 0 : _a.config;\n\n  if (config) {\n    if (config.get) {\n      return config.get('sanitizerEnabled', true);\n    } else {\n      return config.sanitizerEnabled === true || config.sanitizerEnabled === undefined;\n    }\n  }\n\n  return true;\n};\n\nconst allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\nconst blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\n\nclass IonicSafeString {\n  constructor(value) {\n    this.value = value;\n  }\n\n}\n\nexport { IonicSafeString as I, sanitizeDOMString as s };","map":{"version":3,"names":["sanitizeDOMString","untrustedString","IonicSafeString","value","isSanitizerEnabled","documentFragment","document","createDocumentFragment","workingDiv","createElement","appendChild","innerHTML","blockedTags","forEach","blockedTag","getElementsToRemove","querySelectorAll","elementIndex","length","element","parentNode","removeChild","childElements","getElementChildren","childIndex","sanitizeElement","dfChildren","fragmentDiv","getInnerDiv","querySelector","err","console","error","nodeType","i","attributes","attribute","item","attributeName","name","allowedAttributes","includes","toLowerCase","removeAttribute","attributeValue","el","children","childNodes","_a","win","window","config","Ionic","get","sanitizerEnabled","undefined","constructor","I","s"],"sources":["d:/Github/wose_app/node_modules/@ionic/core/dist/esm/index-dff497fb.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n/**\n * Does a simple sanitization of all elements\n * in an untrusted string\n */\nconst sanitizeDOMString = (untrustedString) => {\n  try {\n    if (untrustedString instanceof IonicSafeString) {\n      return untrustedString.value;\n    }\n    if (!isSanitizerEnabled() || typeof untrustedString !== 'string' || untrustedString === '') {\n      return untrustedString;\n    }\n    /**\n     * Create a document fragment\n     * separate from the main DOM,\n     * create a div to do our work in\n     */\n    const documentFragment = document.createDocumentFragment();\n    const workingDiv = document.createElement('div');\n    documentFragment.appendChild(workingDiv);\n    workingDiv.innerHTML = untrustedString;\n    /**\n     * Remove any elements\n     * that are blocked\n     */\n    blockedTags.forEach((blockedTag) => {\n      const getElementsToRemove = documentFragment.querySelectorAll(blockedTag);\n      for (let elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\n        const element = getElementsToRemove[elementIndex];\n        if (element.parentNode) {\n          element.parentNode.removeChild(element);\n        }\n        else {\n          documentFragment.removeChild(element);\n        }\n        /**\n         * We still need to sanitize\n         * the children of this element\n         * as they are left behind\n         */\n        const childElements = getElementChildren(element);\n        /* eslint-disable-next-line */\n        for (let childIndex = 0; childIndex < childElements.length; childIndex++) {\n          sanitizeElement(childElements[childIndex]);\n        }\n      }\n    });\n    /**\n     * Go through remaining elements and remove\n     * non-allowed attribs\n     */\n    // IE does not support .children on document fragments, only .childNodes\n    const dfChildren = getElementChildren(documentFragment);\n    /* eslint-disable-next-line */\n    for (let childIndex = 0; childIndex < dfChildren.length; childIndex++) {\n      sanitizeElement(dfChildren[childIndex]);\n    }\n    // Append document fragment to div\n    const fragmentDiv = document.createElement('div');\n    fragmentDiv.appendChild(documentFragment);\n    // First child is always the div we did our work in\n    const getInnerDiv = fragmentDiv.querySelector('div');\n    return getInnerDiv !== null ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\n  }\n  catch (err) {\n    console.error(err);\n    return '';\n  }\n};\n/**\n * Clean up current element based on allowed attributes\n * and then recursively dig down into any child elements to\n * clean those up as well\n */\nconst sanitizeElement = (element) => {\n  // IE uses childNodes, so ignore nodes that are not elements\n  if (element.nodeType && element.nodeType !== 1) {\n    return;\n  }\n  for (let i = element.attributes.length - 1; i >= 0; i--) {\n    const attribute = element.attributes.item(i);\n    const attributeName = attribute.name;\n    // remove non-allowed attribs\n    if (!allowedAttributes.includes(attributeName.toLowerCase())) {\n      element.removeAttribute(attributeName);\n      continue;\n    }\n    // clean up any allowed attribs\n    // that attempt to do any JS funny-business\n    const attributeValue = attribute.value;\n    /* eslint-disable-next-line */\n    if (attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) {\n      element.removeAttribute(attributeName);\n    }\n  }\n  /**\n   * Sanitize any nested children\n   */\n  const childElements = getElementChildren(element);\n  /* eslint-disable-next-line */\n  for (let i = 0; i < childElements.length; i++) {\n    sanitizeElement(childElements[i]);\n  }\n};\n/**\n * IE doesn't always support .children\n * so we revert to .childNodes instead\n */\nconst getElementChildren = (el) => {\n  return el.children != null ? el.children : el.childNodes;\n};\nconst isSanitizerEnabled = () => {\n  var _a;\n  const win = window;\n  const config = (_a = win === null || win === void 0 ? void 0 : win.Ionic) === null || _a === void 0 ? void 0 : _a.config;\n  if (config) {\n    if (config.get) {\n      return config.get('sanitizerEnabled', true);\n    }\n    else {\n      return config.sanitizerEnabled === true || config.sanitizerEnabled === undefined;\n    }\n  }\n  return true;\n};\nconst allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\nconst blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\nclass IonicSafeString {\n  constructor(value) {\n    this.value = value;\n  }\n}\n\nexport { IonicSafeString as I, sanitizeDOMString as s };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
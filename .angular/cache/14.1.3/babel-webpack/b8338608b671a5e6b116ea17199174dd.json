{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n\n/**\n * Logs a warning to the console with an Ionic prefix\n * to indicate the library that is warning the developer.\n *\n * @param message - The string message to be logged to the console.\n */\nconst printIonWarning = (message, ...params) => {\n  return console.warn(`[Ionic Warning]: ${message}`, ...params);\n};\n/*\n * Logs an error to the console with an Ionic prefix\n * to indicate the library that is warning the developer.\n *\n * @param message - The string message to be logged to the console.\n * @param params - Additional arguments to supply to the console.error.\n */\n\n\nconst printIonError = (message, ...params) => {\n  return console.error(`[Ionic Error]: ${message}`, ...params);\n};\n/**\n * Prints an error informing developers that an implementation requires an element to be used\n * within a specific selector.\n *\n * @param el The web component element this is requiring the element.\n * @param targetSelectors The selector or selectors that were not found.\n */\n\n\nconst printRequiredElementError = (el, ...targetSelectors) => {\n  return console.error(`<${el.tagName.toLowerCase()}> must be used inside ${targetSelectors.join(' or ')}.`);\n};\n\nexport { printRequiredElementError as a, printIonError as b, printIonWarning as p };","map":{"version":3,"names":["printIonWarning","message","params","console","warn","printIonError","error","printRequiredElementError","el","targetSelectors","tagName","toLowerCase","join","a","b","p"],"sources":["d:/Github/wose_app/node_modules/@ionic/core/dist/esm/index-c4b11676.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n/**\n * Logs a warning to the console with an Ionic prefix\n * to indicate the library that is warning the developer.\n *\n * @param message - The string message to be logged to the console.\n */\nconst printIonWarning = (message, ...params) => {\n  return console.warn(`[Ionic Warning]: ${message}`, ...params);\n};\n/*\n * Logs an error to the console with an Ionic prefix\n * to indicate the library that is warning the developer.\n *\n * @param message - The string message to be logged to the console.\n * @param params - Additional arguments to supply to the console.error.\n */\nconst printIonError = (message, ...params) => {\n  return console.error(`[Ionic Error]: ${message}`, ...params);\n};\n/**\n * Prints an error informing developers that an implementation requires an element to be used\n * within a specific selector.\n *\n * @param el The web component element this is requiring the element.\n * @param targetSelectors The selector or selectors that were not found.\n */\nconst printRequiredElementError = (el, ...targetSelectors) => {\n  return console.error(`<${el.tagName.toLowerCase()}> must be used inside ${targetSelectors.join(' or ')}.`);\n};\n\nexport { printRequiredElementError as a, printIonError as b, printIonWarning as p };\n"],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,eAAe,GAAG,CAACC,OAAD,EAAU,GAAGC,MAAb,KAAwB;EAC9C,OAAOC,OAAO,CAACC,IAAR,CAAc,oBAAmBH,OAAQ,EAAzC,EAA4C,GAAGC,MAA/C,CAAP;AACD,CAFD;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMG,aAAa,GAAG,CAACJ,OAAD,EAAU,GAAGC,MAAb,KAAwB;EAC5C,OAAOC,OAAO,CAACG,KAAR,CAAe,kBAAiBL,OAAQ,EAAxC,EAA2C,GAAGC,MAA9C,CAAP;AACD,CAFD;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMK,yBAAyB,GAAG,CAACC,EAAD,EAAK,GAAGC,eAAR,KAA4B;EAC5D,OAAON,OAAO,CAACG,KAAR,CAAe,IAAGE,EAAE,CAACE,OAAH,CAAWC,WAAX,EAAyB,yBAAwBF,eAAe,CAACG,IAAhB,CAAqB,MAArB,CAA6B,GAAhG,CAAP;AACD,CAFD;;AAIA,SAASL,yBAAyB,IAAIM,CAAtC,EAAyCR,aAAa,IAAIS,CAA1D,EAA6Dd,eAAe,IAAIe,CAAhF"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { G as GESTURE_CONTROLLER } from './gesture-controller-17e82006.js';\nexport { G as GESTURE_CONTROLLER } from './gesture-controller-17e82006.js';\n\nconst addEventListener = (el, eventName, callback, opts) => {\n  // use event listener options when supported\n  // otherwise it's just a boolean for the \"capture\" arg\n  const listenerOpts = supportsPassive(el) ? {\n    capture: !!opts.capture,\n    passive: !!opts.passive\n  } : !!opts.capture;\n  let add;\n  let remove;\n\n  if (el['__zone_symbol__addEventListener']) {\n    add = '__zone_symbol__addEventListener';\n    remove = '__zone_symbol__removeEventListener';\n  } else {\n    add = 'addEventListener';\n    remove = 'removeEventListener';\n  }\n\n  el[add](eventName, callback, listenerOpts);\n  return () => {\n    el[remove](eventName, callback, listenerOpts);\n  };\n};\n\nconst supportsPassive = node => {\n  if (_sPassive === undefined) {\n    try {\n      const opts = Object.defineProperty({}, 'passive', {\n        get: () => {\n          _sPassive = true;\n        }\n      });\n      node.addEventListener('optsTest', () => {\n        return;\n      }, opts);\n    } catch (e) {\n      _sPassive = false;\n    }\n  }\n\n  return !!_sPassive;\n};\n\nlet _sPassive;\n\nconst MOUSE_WAIT = 2000;\n\nconst createPointerEvents = (el, pointerDown, pointerMove, pointerUp, options) => {\n  let rmTouchStart;\n  let rmTouchMove;\n  let rmTouchEnd;\n  let rmTouchCancel;\n  let rmMouseStart;\n  let rmMouseMove;\n  let rmMouseUp;\n  let lastTouchEvent = 0;\n\n  const handleTouchStart = ev => {\n    lastTouchEvent = Date.now() + MOUSE_WAIT;\n\n    if (!pointerDown(ev)) {\n      return;\n    }\n\n    if (!rmTouchMove && pointerMove) {\n      rmTouchMove = addEventListener(el, 'touchmove', pointerMove, options);\n    }\n    /**\n     * Events are dispatched on the element that is tapped and bubble up to\n     * the reference element in the gesture. In the event that the element this\n     * event was first dispatched on is removed from the DOM, the event will no\n     * longer bubble up to our reference element. This leaves the gesture in an\n     * unusable state. To account for this, the touchend and touchcancel listeners\n     * should be added to the event target so that they still fire even if the target\n     * is removed from the DOM.\n     */\n\n\n    if (!rmTouchEnd) {\n      rmTouchEnd = addEventListener(ev.target, 'touchend', handleTouchEnd, options);\n    }\n\n    if (!rmTouchCancel) {\n      rmTouchCancel = addEventListener(ev.target, 'touchcancel', handleTouchEnd, options);\n    }\n  };\n\n  const handleMouseDown = ev => {\n    if (lastTouchEvent > Date.now()) {\n      return;\n    }\n\n    if (!pointerDown(ev)) {\n      return;\n    }\n\n    if (!rmMouseMove && pointerMove) {\n      rmMouseMove = addEventListener(getDocument(el), 'mousemove', pointerMove, options);\n    }\n\n    if (!rmMouseUp) {\n      rmMouseUp = addEventListener(getDocument(el), 'mouseup', handleMouseUp, options);\n    }\n  };\n\n  const handleTouchEnd = ev => {\n    stopTouch();\n\n    if (pointerUp) {\n      pointerUp(ev);\n    }\n  };\n\n  const handleMouseUp = ev => {\n    stopMouse();\n\n    if (pointerUp) {\n      pointerUp(ev);\n    }\n  };\n\n  const stopTouch = () => {\n    if (rmTouchMove) {\n      rmTouchMove();\n    }\n\n    if (rmTouchEnd) {\n      rmTouchEnd();\n    }\n\n    if (rmTouchCancel) {\n      rmTouchCancel();\n    }\n\n    rmTouchMove = rmTouchEnd = rmTouchCancel = undefined;\n  };\n\n  const stopMouse = () => {\n    if (rmMouseMove) {\n      rmMouseMove();\n    }\n\n    if (rmMouseUp) {\n      rmMouseUp();\n    }\n\n    rmMouseMove = rmMouseUp = undefined;\n  };\n\n  const stop = () => {\n    stopTouch();\n    stopMouse();\n  };\n\n  const enable = (isEnabled = true) => {\n    if (!isEnabled) {\n      if (rmTouchStart) {\n        rmTouchStart();\n      }\n\n      if (rmMouseStart) {\n        rmMouseStart();\n      }\n\n      rmTouchStart = rmMouseStart = undefined;\n      stop();\n    } else {\n      if (!rmTouchStart) {\n        rmTouchStart = addEventListener(el, 'touchstart', handleTouchStart, options);\n      }\n\n      if (!rmMouseStart) {\n        rmMouseStart = addEventListener(el, 'mousedown', handleMouseDown, options);\n      }\n    }\n  };\n\n  const destroy = () => {\n    enable(false);\n    pointerUp = pointerMove = pointerDown = undefined;\n  };\n\n  return {\n    enable,\n    stop,\n    destroy\n  };\n};\n\nconst getDocument = node => {\n  return node instanceof Document ? node : node.ownerDocument;\n};\n\nconst createPanRecognizer = (direction, thresh, maxAngle) => {\n  const radians = maxAngle * (Math.PI / 180);\n  const isDirX = direction === 'x';\n  const maxCosine = Math.cos(radians);\n  const threshold = thresh * thresh;\n  let startX = 0;\n  let startY = 0;\n  let dirty = false;\n  let isPan = 0;\n  return {\n    start(x, y) {\n      startX = x;\n      startY = y;\n      isPan = 0;\n      dirty = true;\n    },\n\n    detect(x, y) {\n      if (!dirty) {\n        return false;\n      }\n\n      const deltaX = x - startX;\n      const deltaY = y - startY;\n      const distance = deltaX * deltaX + deltaY * deltaY;\n\n      if (distance < threshold) {\n        return false;\n      }\n\n      const hypotenuse = Math.sqrt(distance);\n      const cosine = (isDirX ? deltaX : deltaY) / hypotenuse;\n\n      if (cosine > maxCosine) {\n        isPan = 1;\n      } else if (cosine < -maxCosine) {\n        isPan = -1;\n      } else {\n        isPan = 0;\n      }\n\n      dirty = false;\n      return true;\n    },\n\n    isGesture() {\n      return isPan !== 0;\n    },\n\n    getDirection() {\n      return isPan;\n    }\n\n  };\n};\n\nconst createGesture = config => {\n  let hasCapturedPan = false;\n  let hasStartedPan = false;\n  let hasFiredStart = true;\n  let isMoveQueued = false;\n  const finalConfig = Object.assign({\n    disableScroll: false,\n    direction: 'x',\n    gesturePriority: 0,\n    passive: true,\n    maxAngle: 40,\n    threshold: 10\n  }, config);\n  const canStart = finalConfig.canStart;\n  const onWillStart = finalConfig.onWillStart;\n  const onStart = finalConfig.onStart;\n  const onEnd = finalConfig.onEnd;\n  const notCaptured = finalConfig.notCaptured;\n  const onMove = finalConfig.onMove;\n  const threshold = finalConfig.threshold;\n  const passive = finalConfig.passive;\n  const blurOnStart = finalConfig.blurOnStart;\n  const detail = {\n    type: 'pan',\n    startX: 0,\n    startY: 0,\n    startTime: 0,\n    currentX: 0,\n    currentY: 0,\n    velocityX: 0,\n    velocityY: 0,\n    deltaX: 0,\n    deltaY: 0,\n    currentTime: 0,\n    event: undefined,\n    data: undefined\n  };\n  const pan = createPanRecognizer(finalConfig.direction, finalConfig.threshold, finalConfig.maxAngle);\n  const gesture = GESTURE_CONTROLLER.createGesture({\n    name: config.gestureName,\n    priority: config.gesturePriority,\n    disableScroll: config.disableScroll\n  });\n\n  const pointerDown = ev => {\n    const timeStamp = now(ev);\n\n    if (hasStartedPan || !hasFiredStart) {\n      return false;\n    }\n\n    updateDetail(ev, detail);\n    detail.startX = detail.currentX;\n    detail.startY = detail.currentY;\n    detail.startTime = detail.currentTime = timeStamp;\n    detail.velocityX = detail.velocityY = detail.deltaX = detail.deltaY = 0;\n    detail.event = ev; // Check if gesture can start\n\n    if (canStart && canStart(detail) === false) {\n      return false;\n    } // Release fallback\n\n\n    gesture.release(); // Start gesture\n\n    if (!gesture.start()) {\n      return false;\n    }\n\n    hasStartedPan = true;\n\n    if (threshold === 0) {\n      return tryToCapturePan();\n    }\n\n    pan.start(detail.startX, detail.startY);\n    return true;\n  };\n\n  const pointerMove = ev => {\n    // fast path, if gesture is currently captured\n    // do minimum job to get user-land even dispatched\n    if (hasCapturedPan) {\n      if (!isMoveQueued && hasFiredStart) {\n        isMoveQueued = true;\n        calcGestureData(detail, ev);\n        requestAnimationFrame(fireOnMove);\n      }\n\n      return;\n    } // gesture is currently being detected\n\n\n    calcGestureData(detail, ev);\n\n    if (pan.detect(detail.currentX, detail.currentY)) {\n      if (!pan.isGesture() || !tryToCapturePan()) {\n        abortGesture();\n      }\n    }\n  };\n\n  const fireOnMove = () => {\n    // Since fireOnMove is called inside a RAF, onEnd() might be called,\n    // we must double check hasCapturedPan\n    if (!hasCapturedPan) {\n      return;\n    }\n\n    isMoveQueued = false;\n\n    if (onMove) {\n      onMove(detail);\n    }\n  };\n\n  const tryToCapturePan = () => {\n    if (gesture && !gesture.capture()) {\n      return false;\n    }\n\n    hasCapturedPan = true;\n    hasFiredStart = false; // reset start position since the real user-land event starts here\n    // If the pan detector threshold is big, not resetting the start position\n    // will cause a jump in the animation equal to the detector threshold.\n    // the array of positions used to calculate the gesture velocity does not\n    // need to be cleaned, more points in the positions array always results in a\n    // more accurate value of the velocity.\n\n    detail.startX = detail.currentX;\n    detail.startY = detail.currentY;\n    detail.startTime = detail.currentTime;\n\n    if (onWillStart) {\n      onWillStart(detail).then(fireOnStart);\n    } else {\n      fireOnStart();\n    }\n\n    return true;\n  };\n\n  const blurActiveElement = () => {\n    if (typeof document !== 'undefined') {\n      const activeElement = document.activeElement;\n\n      if (activeElement === null || activeElement === void 0 ? void 0 : activeElement.blur) {\n        activeElement.blur();\n      }\n    }\n  };\n\n  const fireOnStart = () => {\n    if (blurOnStart) {\n      blurActiveElement();\n    }\n\n    if (onStart) {\n      onStart(detail);\n    }\n\n    hasFiredStart = true;\n  };\n\n  const reset = () => {\n    hasCapturedPan = false;\n    hasStartedPan = false;\n    isMoveQueued = false;\n    hasFiredStart = true;\n    gesture.release();\n  }; // END *************************\n\n\n  const pointerUp = ev => {\n    const tmpHasCaptured = hasCapturedPan;\n    const tmpHasFiredStart = hasFiredStart;\n    reset();\n\n    if (!tmpHasFiredStart) {\n      return;\n    }\n\n    calcGestureData(detail, ev); // Try to capture press\n\n    if (tmpHasCaptured) {\n      if (onEnd) {\n        onEnd(detail);\n      }\n\n      return;\n    } // Not captured any event\n\n\n    if (notCaptured) {\n      notCaptured(detail);\n    }\n  };\n\n  const pointerEvents = createPointerEvents(finalConfig.el, pointerDown, pointerMove, pointerUp, {\n    capture: false,\n    passive\n  });\n\n  const abortGesture = () => {\n    reset();\n    pointerEvents.stop();\n\n    if (notCaptured) {\n      notCaptured(detail);\n    }\n  };\n\n  return {\n    enable(enable = true) {\n      if (!enable) {\n        if (hasCapturedPan) {\n          pointerUp(undefined);\n        }\n\n        reset();\n      }\n\n      pointerEvents.enable(enable);\n    },\n\n    destroy() {\n      gesture.destroy();\n      pointerEvents.destroy();\n    }\n\n  };\n};\n\nconst calcGestureData = (detail, ev) => {\n  if (!ev) {\n    return;\n  }\n\n  const prevX = detail.currentX;\n  const prevY = detail.currentY;\n  const prevT = detail.currentTime;\n  updateDetail(ev, detail);\n  const currentX = detail.currentX;\n  const currentY = detail.currentY;\n  const timestamp = detail.currentTime = now(ev);\n  const timeDelta = timestamp - prevT;\n\n  if (timeDelta > 0 && timeDelta < 100) {\n    const velocityX = (currentX - prevX) / timeDelta;\n    const velocityY = (currentY - prevY) / timeDelta;\n    detail.velocityX = velocityX * 0.7 + detail.velocityX * 0.3;\n    detail.velocityY = velocityY * 0.7 + detail.velocityY * 0.3;\n  }\n\n  detail.deltaX = currentX - detail.startX;\n  detail.deltaY = currentY - detail.startY;\n  detail.event = ev;\n};\n\nconst updateDetail = (ev, detail) => {\n  // get X coordinates for either a mouse click\n  // or a touch depending on the given event\n  let x = 0;\n  let y = 0;\n\n  if (ev) {\n    const changedTouches = ev.changedTouches;\n\n    if (changedTouches && changedTouches.length > 0) {\n      const touch = changedTouches[0];\n      x = touch.clientX;\n      y = touch.clientY;\n    } else if (ev.pageX !== undefined) {\n      x = ev.pageX;\n      y = ev.pageY;\n    }\n  }\n\n  detail.currentX = x;\n  detail.currentY = y;\n};\n\nconst now = ev => {\n  return ev.timeStamp || Date.now();\n};\n\nexport { createGesture };","map":{"version":3,"names":["G","GESTURE_CONTROLLER","addEventListener","el","eventName","callback","opts","listenerOpts","supportsPassive","capture","passive","add","remove","node","_sPassive","undefined","Object","defineProperty","get","e","MOUSE_WAIT","createPointerEvents","pointerDown","pointerMove","pointerUp","options","rmTouchStart","rmTouchMove","rmTouchEnd","rmTouchCancel","rmMouseStart","rmMouseMove","rmMouseUp","lastTouchEvent","handleTouchStart","ev","Date","now","target","handleTouchEnd","handleMouseDown","getDocument","handleMouseUp","stopTouch","stopMouse","stop","enable","isEnabled","destroy","Document","ownerDocument","createPanRecognizer","direction","thresh","maxAngle","radians","Math","PI","isDirX","maxCosine","cos","threshold","startX","startY","dirty","isPan","start","x","y","detect","deltaX","deltaY","distance","hypotenuse","sqrt","cosine","isGesture","getDirection","createGesture","config","hasCapturedPan","hasStartedPan","hasFiredStart","isMoveQueued","finalConfig","assign","disableScroll","gesturePriority","canStart","onWillStart","onStart","onEnd","notCaptured","onMove","blurOnStart","detail","type","startTime","currentX","currentY","velocityX","velocityY","currentTime","event","data","pan","gesture","name","gestureName","priority","timeStamp","updateDetail","release","tryToCapturePan","calcGestureData","requestAnimationFrame","fireOnMove","abortGesture","then","fireOnStart","blurActiveElement","document","activeElement","blur","reset","tmpHasCaptured","tmpHasFiredStart","pointerEvents","prevX","prevY","prevT","timestamp","timeDelta","changedTouches","length","touch","clientX","clientY","pageX","pageY"],"sources":["d:/Github/wose_app/node_modules/@ionic/core/dist/esm/index-3f1a7d95.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { G as GESTURE_CONTROLLER } from './gesture-controller-17e82006.js';\nexport { G as GESTURE_CONTROLLER } from './gesture-controller-17e82006.js';\n\nconst addEventListener = (el, eventName, callback, opts) => {\n  // use event listener options when supported\n  // otherwise it's just a boolean for the \"capture\" arg\n  const listenerOpts = supportsPassive(el)\n    ? {\n      capture: !!opts.capture,\n      passive: !!opts.passive,\n    }\n    : !!opts.capture;\n  let add;\n  let remove;\n  if (el['__zone_symbol__addEventListener']) {\n    add = '__zone_symbol__addEventListener';\n    remove = '__zone_symbol__removeEventListener';\n  }\n  else {\n    add = 'addEventListener';\n    remove = 'removeEventListener';\n  }\n  el[add](eventName, callback, listenerOpts);\n  return () => {\n    el[remove](eventName, callback, listenerOpts);\n  };\n};\nconst supportsPassive = (node) => {\n  if (_sPassive === undefined) {\n    try {\n      const opts = Object.defineProperty({}, 'passive', {\n        get: () => {\n          _sPassive = true;\n        },\n      });\n      node.addEventListener('optsTest', () => {\n        return;\n      }, opts);\n    }\n    catch (e) {\n      _sPassive = false;\n    }\n  }\n  return !!_sPassive;\n};\nlet _sPassive;\n\nconst MOUSE_WAIT = 2000;\nconst createPointerEvents = (el, pointerDown, pointerMove, pointerUp, options) => {\n  let rmTouchStart;\n  let rmTouchMove;\n  let rmTouchEnd;\n  let rmTouchCancel;\n  let rmMouseStart;\n  let rmMouseMove;\n  let rmMouseUp;\n  let lastTouchEvent = 0;\n  const handleTouchStart = (ev) => {\n    lastTouchEvent = Date.now() + MOUSE_WAIT;\n    if (!pointerDown(ev)) {\n      return;\n    }\n    if (!rmTouchMove && pointerMove) {\n      rmTouchMove = addEventListener(el, 'touchmove', pointerMove, options);\n    }\n    /**\n     * Events are dispatched on the element that is tapped and bubble up to\n     * the reference element in the gesture. In the event that the element this\n     * event was first dispatched on is removed from the DOM, the event will no\n     * longer bubble up to our reference element. This leaves the gesture in an\n     * unusable state. To account for this, the touchend and touchcancel listeners\n     * should be added to the event target so that they still fire even if the target\n     * is removed from the DOM.\n     */\n    if (!rmTouchEnd) {\n      rmTouchEnd = addEventListener(ev.target, 'touchend', handleTouchEnd, options);\n    }\n    if (!rmTouchCancel) {\n      rmTouchCancel = addEventListener(ev.target, 'touchcancel', handleTouchEnd, options);\n    }\n  };\n  const handleMouseDown = (ev) => {\n    if (lastTouchEvent > Date.now()) {\n      return;\n    }\n    if (!pointerDown(ev)) {\n      return;\n    }\n    if (!rmMouseMove && pointerMove) {\n      rmMouseMove = addEventListener(getDocument(el), 'mousemove', pointerMove, options);\n    }\n    if (!rmMouseUp) {\n      rmMouseUp = addEventListener(getDocument(el), 'mouseup', handleMouseUp, options);\n    }\n  };\n  const handleTouchEnd = (ev) => {\n    stopTouch();\n    if (pointerUp) {\n      pointerUp(ev);\n    }\n  };\n  const handleMouseUp = (ev) => {\n    stopMouse();\n    if (pointerUp) {\n      pointerUp(ev);\n    }\n  };\n  const stopTouch = () => {\n    if (rmTouchMove) {\n      rmTouchMove();\n    }\n    if (rmTouchEnd) {\n      rmTouchEnd();\n    }\n    if (rmTouchCancel) {\n      rmTouchCancel();\n    }\n    rmTouchMove = rmTouchEnd = rmTouchCancel = undefined;\n  };\n  const stopMouse = () => {\n    if (rmMouseMove) {\n      rmMouseMove();\n    }\n    if (rmMouseUp) {\n      rmMouseUp();\n    }\n    rmMouseMove = rmMouseUp = undefined;\n  };\n  const stop = () => {\n    stopTouch();\n    stopMouse();\n  };\n  const enable = (isEnabled = true) => {\n    if (!isEnabled) {\n      if (rmTouchStart) {\n        rmTouchStart();\n      }\n      if (rmMouseStart) {\n        rmMouseStart();\n      }\n      rmTouchStart = rmMouseStart = undefined;\n      stop();\n    }\n    else {\n      if (!rmTouchStart) {\n        rmTouchStart = addEventListener(el, 'touchstart', handleTouchStart, options);\n      }\n      if (!rmMouseStart) {\n        rmMouseStart = addEventListener(el, 'mousedown', handleMouseDown, options);\n      }\n    }\n  };\n  const destroy = () => {\n    enable(false);\n    pointerUp = pointerMove = pointerDown = undefined;\n  };\n  return {\n    enable,\n    stop,\n    destroy,\n  };\n};\nconst getDocument = (node) => {\n  return node instanceof Document ? node : node.ownerDocument;\n};\n\nconst createPanRecognizer = (direction, thresh, maxAngle) => {\n  const radians = maxAngle * (Math.PI / 180);\n  const isDirX = direction === 'x';\n  const maxCosine = Math.cos(radians);\n  const threshold = thresh * thresh;\n  let startX = 0;\n  let startY = 0;\n  let dirty = false;\n  let isPan = 0;\n  return {\n    start(x, y) {\n      startX = x;\n      startY = y;\n      isPan = 0;\n      dirty = true;\n    },\n    detect(x, y) {\n      if (!dirty) {\n        return false;\n      }\n      const deltaX = x - startX;\n      const deltaY = y - startY;\n      const distance = deltaX * deltaX + deltaY * deltaY;\n      if (distance < threshold) {\n        return false;\n      }\n      const hypotenuse = Math.sqrt(distance);\n      const cosine = (isDirX ? deltaX : deltaY) / hypotenuse;\n      if (cosine > maxCosine) {\n        isPan = 1;\n      }\n      else if (cosine < -maxCosine) {\n        isPan = -1;\n      }\n      else {\n        isPan = 0;\n      }\n      dirty = false;\n      return true;\n    },\n    isGesture() {\n      return isPan !== 0;\n    },\n    getDirection() {\n      return isPan;\n    },\n  };\n};\n\nconst createGesture = (config) => {\n  let hasCapturedPan = false;\n  let hasStartedPan = false;\n  let hasFiredStart = true;\n  let isMoveQueued = false;\n  const finalConfig = Object.assign({ disableScroll: false, direction: 'x', gesturePriority: 0, passive: true, maxAngle: 40, threshold: 10 }, config);\n  const canStart = finalConfig.canStart;\n  const onWillStart = finalConfig.onWillStart;\n  const onStart = finalConfig.onStart;\n  const onEnd = finalConfig.onEnd;\n  const notCaptured = finalConfig.notCaptured;\n  const onMove = finalConfig.onMove;\n  const threshold = finalConfig.threshold;\n  const passive = finalConfig.passive;\n  const blurOnStart = finalConfig.blurOnStart;\n  const detail = {\n    type: 'pan',\n    startX: 0,\n    startY: 0,\n    startTime: 0,\n    currentX: 0,\n    currentY: 0,\n    velocityX: 0,\n    velocityY: 0,\n    deltaX: 0,\n    deltaY: 0,\n    currentTime: 0,\n    event: undefined,\n    data: undefined,\n  };\n  const pan = createPanRecognizer(finalConfig.direction, finalConfig.threshold, finalConfig.maxAngle);\n  const gesture = GESTURE_CONTROLLER.createGesture({\n    name: config.gestureName,\n    priority: config.gesturePriority,\n    disableScroll: config.disableScroll,\n  });\n  const pointerDown = (ev) => {\n    const timeStamp = now(ev);\n    if (hasStartedPan || !hasFiredStart) {\n      return false;\n    }\n    updateDetail(ev, detail);\n    detail.startX = detail.currentX;\n    detail.startY = detail.currentY;\n    detail.startTime = detail.currentTime = timeStamp;\n    detail.velocityX = detail.velocityY = detail.deltaX = detail.deltaY = 0;\n    detail.event = ev;\n    // Check if gesture can start\n    if (canStart && canStart(detail) === false) {\n      return false;\n    }\n    // Release fallback\n    gesture.release();\n    // Start gesture\n    if (!gesture.start()) {\n      return false;\n    }\n    hasStartedPan = true;\n    if (threshold === 0) {\n      return tryToCapturePan();\n    }\n    pan.start(detail.startX, detail.startY);\n    return true;\n  };\n  const pointerMove = (ev) => {\n    // fast path, if gesture is currently captured\n    // do minimum job to get user-land even dispatched\n    if (hasCapturedPan) {\n      if (!isMoveQueued && hasFiredStart) {\n        isMoveQueued = true;\n        calcGestureData(detail, ev);\n        requestAnimationFrame(fireOnMove);\n      }\n      return;\n    }\n    // gesture is currently being detected\n    calcGestureData(detail, ev);\n    if (pan.detect(detail.currentX, detail.currentY)) {\n      if (!pan.isGesture() || !tryToCapturePan()) {\n        abortGesture();\n      }\n    }\n  };\n  const fireOnMove = () => {\n    // Since fireOnMove is called inside a RAF, onEnd() might be called,\n    // we must double check hasCapturedPan\n    if (!hasCapturedPan) {\n      return;\n    }\n    isMoveQueued = false;\n    if (onMove) {\n      onMove(detail);\n    }\n  };\n  const tryToCapturePan = () => {\n    if (gesture && !gesture.capture()) {\n      return false;\n    }\n    hasCapturedPan = true;\n    hasFiredStart = false;\n    // reset start position since the real user-land event starts here\n    // If the pan detector threshold is big, not resetting the start position\n    // will cause a jump in the animation equal to the detector threshold.\n    // the array of positions used to calculate the gesture velocity does not\n    // need to be cleaned, more points in the positions array always results in a\n    // more accurate value of the velocity.\n    detail.startX = detail.currentX;\n    detail.startY = detail.currentY;\n    detail.startTime = detail.currentTime;\n    if (onWillStart) {\n      onWillStart(detail).then(fireOnStart);\n    }\n    else {\n      fireOnStart();\n    }\n    return true;\n  };\n  const blurActiveElement = () => {\n    if (typeof document !== 'undefined') {\n      const activeElement = document.activeElement;\n      if (activeElement === null || activeElement === void 0 ? void 0 : activeElement.blur) {\n        activeElement.blur();\n      }\n    }\n  };\n  const fireOnStart = () => {\n    if (blurOnStart) {\n      blurActiveElement();\n    }\n    if (onStart) {\n      onStart(detail);\n    }\n    hasFiredStart = true;\n  };\n  const reset = () => {\n    hasCapturedPan = false;\n    hasStartedPan = false;\n    isMoveQueued = false;\n    hasFiredStart = true;\n    gesture.release();\n  };\n  // END *************************\n  const pointerUp = (ev) => {\n    const tmpHasCaptured = hasCapturedPan;\n    const tmpHasFiredStart = hasFiredStart;\n    reset();\n    if (!tmpHasFiredStart) {\n      return;\n    }\n    calcGestureData(detail, ev);\n    // Try to capture press\n    if (tmpHasCaptured) {\n      if (onEnd) {\n        onEnd(detail);\n      }\n      return;\n    }\n    // Not captured any event\n    if (notCaptured) {\n      notCaptured(detail);\n    }\n  };\n  const pointerEvents = createPointerEvents(finalConfig.el, pointerDown, pointerMove, pointerUp, {\n    capture: false,\n    passive,\n  });\n  const abortGesture = () => {\n    reset();\n    pointerEvents.stop();\n    if (notCaptured) {\n      notCaptured(detail);\n    }\n  };\n  return {\n    enable(enable = true) {\n      if (!enable) {\n        if (hasCapturedPan) {\n          pointerUp(undefined);\n        }\n        reset();\n      }\n      pointerEvents.enable(enable);\n    },\n    destroy() {\n      gesture.destroy();\n      pointerEvents.destroy();\n    },\n  };\n};\nconst calcGestureData = (detail, ev) => {\n  if (!ev) {\n    return;\n  }\n  const prevX = detail.currentX;\n  const prevY = detail.currentY;\n  const prevT = detail.currentTime;\n  updateDetail(ev, detail);\n  const currentX = detail.currentX;\n  const currentY = detail.currentY;\n  const timestamp = (detail.currentTime = now(ev));\n  const timeDelta = timestamp - prevT;\n  if (timeDelta > 0 && timeDelta < 100) {\n    const velocityX = (currentX - prevX) / timeDelta;\n    const velocityY = (currentY - prevY) / timeDelta;\n    detail.velocityX = velocityX * 0.7 + detail.velocityX * 0.3;\n    detail.velocityY = velocityY * 0.7 + detail.velocityY * 0.3;\n  }\n  detail.deltaX = currentX - detail.startX;\n  detail.deltaY = currentY - detail.startY;\n  detail.event = ev;\n};\nconst updateDetail = (ev, detail) => {\n  // get X coordinates for either a mouse click\n  // or a touch depending on the given event\n  let x = 0;\n  let y = 0;\n  if (ev) {\n    const changedTouches = ev.changedTouches;\n    if (changedTouches && changedTouches.length > 0) {\n      const touch = changedTouches[0];\n      x = touch.clientX;\n      y = touch.clientY;\n    }\n    else if (ev.pageX !== undefined) {\n      x = ev.pageX;\n      y = ev.pageY;\n    }\n  }\n  detail.currentX = x;\n  detail.currentY = y;\n};\nconst now = (ev) => {\n  return ev.timeStamp || Date.now();\n};\n\nexport { createGesture };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nclass GestureController {\n  constructor() {\n    this.gestureId = 0;\n    this.requestedStart = new Map();\n    this.disabledGestures = new Map();\n    this.disabledScroll = new Set();\n  }\n  /**\n   * Creates a gesture delegate based on the GestureConfig passed\n   */\n\n\n  createGesture(config) {\n    return new GestureDelegate(this, this.newID(), config.name, config.priority || 0, !!config.disableScroll);\n  }\n  /**\n   * Creates a blocker that will block any other gesture events from firing. Set in the ion-gesture component.\n   */\n\n\n  createBlocker(opts = {}) {\n    return new BlockerDelegate(this, this.newID(), opts.disable, !!opts.disableScroll);\n  }\n\n  start(gestureName, id, priority) {\n    if (!this.canStart(gestureName)) {\n      this.requestedStart.delete(id);\n      return false;\n    }\n\n    this.requestedStart.set(id, priority);\n    return true;\n  }\n\n  capture(gestureName, id, priority) {\n    if (!this.start(gestureName, id, priority)) {\n      return false;\n    }\n\n    const requestedStart = this.requestedStart;\n    let maxPriority = -10000;\n    requestedStart.forEach(value => {\n      maxPriority = Math.max(maxPriority, value);\n    });\n\n    if (maxPriority === priority) {\n      this.capturedId = id;\n      requestedStart.clear();\n      const event = new CustomEvent('ionGestureCaptured', {\n        detail: {\n          gestureName\n        }\n      });\n      document.dispatchEvent(event);\n      return true;\n    }\n\n    requestedStart.delete(id);\n    return false;\n  }\n\n  release(id) {\n    this.requestedStart.delete(id);\n\n    if (this.capturedId === id) {\n      this.capturedId = undefined;\n    }\n  }\n\n  disableGesture(gestureName, id) {\n    let set = this.disabledGestures.get(gestureName);\n\n    if (set === undefined) {\n      set = new Set();\n      this.disabledGestures.set(gestureName, set);\n    }\n\n    set.add(id);\n  }\n\n  enableGesture(gestureName, id) {\n    const set = this.disabledGestures.get(gestureName);\n\n    if (set !== undefined) {\n      set.delete(id);\n    }\n  }\n\n  disableScroll(id) {\n    this.disabledScroll.add(id);\n\n    if (this.disabledScroll.size === 1) {\n      document.body.classList.add(BACKDROP_NO_SCROLL);\n    }\n  }\n\n  enableScroll(id) {\n    this.disabledScroll.delete(id);\n\n    if (this.disabledScroll.size === 0) {\n      document.body.classList.remove(BACKDROP_NO_SCROLL);\n    }\n  }\n\n  canStart(gestureName) {\n    if (this.capturedId !== undefined) {\n      // a gesture already captured\n      return false;\n    }\n\n    if (this.isDisabled(gestureName)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  isCaptured() {\n    return this.capturedId !== undefined;\n  }\n\n  isScrollDisabled() {\n    return this.disabledScroll.size > 0;\n  }\n\n  isDisabled(gestureName) {\n    const disabled = this.disabledGestures.get(gestureName);\n\n    if (disabled && disabled.size > 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  newID() {\n    this.gestureId++;\n    return this.gestureId;\n  }\n\n}\n\nclass GestureDelegate {\n  constructor(ctrl, id, name, priority, disableScroll) {\n    this.id = id;\n    this.name = name;\n    this.disableScroll = disableScroll;\n    this.priority = priority * 1000000 + id;\n    this.ctrl = ctrl;\n  }\n\n  canStart() {\n    if (!this.ctrl) {\n      return false;\n    }\n\n    return this.ctrl.canStart(this.name);\n  }\n\n  start() {\n    if (!this.ctrl) {\n      return false;\n    }\n\n    return this.ctrl.start(this.name, this.id, this.priority);\n  }\n\n  capture() {\n    if (!this.ctrl) {\n      return false;\n    }\n\n    const captured = this.ctrl.capture(this.name, this.id, this.priority);\n\n    if (captured && this.disableScroll) {\n      this.ctrl.disableScroll(this.id);\n    }\n\n    return captured;\n  }\n\n  release() {\n    if (this.ctrl) {\n      this.ctrl.release(this.id);\n\n      if (this.disableScroll) {\n        this.ctrl.enableScroll(this.id);\n      }\n    }\n  }\n\n  destroy() {\n    this.release();\n    this.ctrl = undefined;\n  }\n\n}\n\nclass BlockerDelegate {\n  constructor(ctrl, id, disable, disableScroll) {\n    this.id = id;\n    this.disable = disable;\n    this.disableScroll = disableScroll;\n    this.ctrl = ctrl;\n  }\n\n  block() {\n    if (!this.ctrl) {\n      return;\n    }\n\n    if (this.disable) {\n      for (const gesture of this.disable) {\n        this.ctrl.disableGesture(gesture, this.id);\n      }\n    }\n\n    if (this.disableScroll) {\n      this.ctrl.disableScroll(this.id);\n    }\n  }\n\n  unblock() {\n    if (!this.ctrl) {\n      return;\n    }\n\n    if (this.disable) {\n      for (const gesture of this.disable) {\n        this.ctrl.enableGesture(gesture, this.id);\n      }\n    }\n\n    if (this.disableScroll) {\n      this.ctrl.enableScroll(this.id);\n    }\n  }\n\n  destroy() {\n    this.unblock();\n    this.ctrl = undefined;\n  }\n\n}\n\nconst BACKDROP_NO_SCROLL = 'backdrop-no-scroll';\nconst GESTURE_CONTROLLER = new GestureController();\nexport { GESTURE_CONTROLLER as G };","map":{"version":3,"names":["GestureController","constructor","gestureId","requestedStart","Map","disabledGestures","disabledScroll","Set","createGesture","config","GestureDelegate","newID","name","priority","disableScroll","createBlocker","opts","BlockerDelegate","disable","start","gestureName","id","canStart","delete","set","capture","maxPriority","forEach","value","Math","max","capturedId","clear","event","CustomEvent","detail","document","dispatchEvent","release","undefined","disableGesture","get","add","enableGesture","size","body","classList","BACKDROP_NO_SCROLL","enableScroll","remove","isDisabled","isCaptured","isScrollDisabled","disabled","ctrl","captured","destroy","block","gesture","unblock","GESTURE_CONTROLLER","G"],"sources":["d:/Github/wose_app/node_modules/@ionic/core/dist/esm/gesture-controller-17e82006.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nclass GestureController {\n  constructor() {\n    this.gestureId = 0;\n    this.requestedStart = new Map();\n    this.disabledGestures = new Map();\n    this.disabledScroll = new Set();\n  }\n  /**\n   * Creates a gesture delegate based on the GestureConfig passed\n   */\n  createGesture(config) {\n    return new GestureDelegate(this, this.newID(), config.name, config.priority || 0, !!config.disableScroll);\n  }\n  /**\n   * Creates a blocker that will block any other gesture events from firing. Set in the ion-gesture component.\n   */\n  createBlocker(opts = {}) {\n    return new BlockerDelegate(this, this.newID(), opts.disable, !!opts.disableScroll);\n  }\n  start(gestureName, id, priority) {\n    if (!this.canStart(gestureName)) {\n      this.requestedStart.delete(id);\n      return false;\n    }\n    this.requestedStart.set(id, priority);\n    return true;\n  }\n  capture(gestureName, id, priority) {\n    if (!this.start(gestureName, id, priority)) {\n      return false;\n    }\n    const requestedStart = this.requestedStart;\n    let maxPriority = -10000;\n    requestedStart.forEach((value) => {\n      maxPriority = Math.max(maxPriority, value);\n    });\n    if (maxPriority === priority) {\n      this.capturedId = id;\n      requestedStart.clear();\n      const event = new CustomEvent('ionGestureCaptured', { detail: { gestureName } });\n      document.dispatchEvent(event);\n      return true;\n    }\n    requestedStart.delete(id);\n    return false;\n  }\n  release(id) {\n    this.requestedStart.delete(id);\n    if (this.capturedId === id) {\n      this.capturedId = undefined;\n    }\n  }\n  disableGesture(gestureName, id) {\n    let set = this.disabledGestures.get(gestureName);\n    if (set === undefined) {\n      set = new Set();\n      this.disabledGestures.set(gestureName, set);\n    }\n    set.add(id);\n  }\n  enableGesture(gestureName, id) {\n    const set = this.disabledGestures.get(gestureName);\n    if (set !== undefined) {\n      set.delete(id);\n    }\n  }\n  disableScroll(id) {\n    this.disabledScroll.add(id);\n    if (this.disabledScroll.size === 1) {\n      document.body.classList.add(BACKDROP_NO_SCROLL);\n    }\n  }\n  enableScroll(id) {\n    this.disabledScroll.delete(id);\n    if (this.disabledScroll.size === 0) {\n      document.body.classList.remove(BACKDROP_NO_SCROLL);\n    }\n  }\n  canStart(gestureName) {\n    if (this.capturedId !== undefined) {\n      // a gesture already captured\n      return false;\n    }\n    if (this.isDisabled(gestureName)) {\n      return false;\n    }\n    return true;\n  }\n  isCaptured() {\n    return this.capturedId !== undefined;\n  }\n  isScrollDisabled() {\n    return this.disabledScroll.size > 0;\n  }\n  isDisabled(gestureName) {\n    const disabled = this.disabledGestures.get(gestureName);\n    if (disabled && disabled.size > 0) {\n      return true;\n    }\n    return false;\n  }\n  newID() {\n    this.gestureId++;\n    return this.gestureId;\n  }\n}\nclass GestureDelegate {\n  constructor(ctrl, id, name, priority, disableScroll) {\n    this.id = id;\n    this.name = name;\n    this.disableScroll = disableScroll;\n    this.priority = priority * 1000000 + id;\n    this.ctrl = ctrl;\n  }\n  canStart() {\n    if (!this.ctrl) {\n      return false;\n    }\n    return this.ctrl.canStart(this.name);\n  }\n  start() {\n    if (!this.ctrl) {\n      return false;\n    }\n    return this.ctrl.start(this.name, this.id, this.priority);\n  }\n  capture() {\n    if (!this.ctrl) {\n      return false;\n    }\n    const captured = this.ctrl.capture(this.name, this.id, this.priority);\n    if (captured && this.disableScroll) {\n      this.ctrl.disableScroll(this.id);\n    }\n    return captured;\n  }\n  release() {\n    if (this.ctrl) {\n      this.ctrl.release(this.id);\n      if (this.disableScroll) {\n        this.ctrl.enableScroll(this.id);\n      }\n    }\n  }\n  destroy() {\n    this.release();\n    this.ctrl = undefined;\n  }\n}\nclass BlockerDelegate {\n  constructor(ctrl, id, disable, disableScroll) {\n    this.id = id;\n    this.disable = disable;\n    this.disableScroll = disableScroll;\n    this.ctrl = ctrl;\n  }\n  block() {\n    if (!this.ctrl) {\n      return;\n    }\n    if (this.disable) {\n      for (const gesture of this.disable) {\n        this.ctrl.disableGesture(gesture, this.id);\n      }\n    }\n    if (this.disableScroll) {\n      this.ctrl.disableScroll(this.id);\n    }\n  }\n  unblock() {\n    if (!this.ctrl) {\n      return;\n    }\n    if (this.disable) {\n      for (const gesture of this.disable) {\n        this.ctrl.enableGesture(gesture, this.id);\n      }\n    }\n    if (this.disableScroll) {\n      this.ctrl.enableScroll(this.id);\n    }\n  }\n  destroy() {\n    this.unblock();\n    this.ctrl = undefined;\n  }\n}\nconst BACKDROP_NO_SCROLL = 'backdrop-no-scroll';\nconst GESTURE_CONTROLLER = new GestureController();\n\nexport { GESTURE_CONTROLLER as G };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}